{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220bf6f5285990cac2d37536df71c1046636fe28c9ad8bfc0600da3f971d6aa686a64736f6c634300081e0033",
			"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH16 0x5285990CAC2D37536DF71C1046636FE2 DUP13 SWAP11 0xD8 0xBF 0xC0 PUSH1 0xD LOG3 EXTDELEGATECALL PUSH18 0xD6AA686A64736F6C634300081E0033000000 ",
			"sourceMap": "40032:31863:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220bf6f5285990cac2d37536df71c1046636fe28c9ad8bfc0600da3f971d6aa686a64736f6c634300081e0033",
			"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH16 0x5285990CAC2D37536DF71C1046636FE2 DUP13 SWAP11 0xD8 0xBF 0xC0 PUSH1 0xD LOG3 EXTDELEGATECALL PUSH18 0xD6AA686A64736F6C634300081E0033000000 ",
			"sourceMap": "40032:31863:0:-:0;;;;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "17000",
				"executionCost": "92",
				"totalCost": "17092"
			},
			"internal": {
				"_zeroBytes(bytes memory)": "infinite",
				"add512(uint256,uint256)": "infinite",
				"average(uint256,uint256)": "infinite",
				"ceilDiv(uint256,uint256)": "infinite",
				"invMod(uint256,uint256)": "infinite",
				"invModPrime(uint256,uint256)": "infinite",
				"log10(uint256)": "infinite",
				"log10(uint256,enum Math.Rounding)": "infinite",
				"log2(uint256)": "infinite",
				"log2(uint256,enum Math.Rounding)": "infinite",
				"log256(uint256)": "infinite",
				"log256(uint256,enum Math.Rounding)": "infinite",
				"max(uint256,uint256)": "infinite",
				"min(uint256,uint256)": "infinite",
				"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
				"modExp(uint256,uint256,uint256)": "infinite",
				"mul512(uint256,uint256)": "infinite",
				"mulDiv(uint256,uint256,uint256)": "infinite",
				"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
				"mulShr(uint256,uint256,uint8)": "infinite",
				"mulShr(uint256,uint256,uint8,enum Math.Rounding)": "infinite",
				"saturatingAdd(uint256,uint256)": "infinite",
				"saturatingMul(uint256,uint256)": "infinite",
				"saturatingSub(uint256,uint256)": "infinite",
				"sqrt(uint256)": "infinite",
				"sqrt(uint256,enum Math.Rounding)": "infinite",
				"ternary(bool,uint256,uint256)": "infinite",
				"tryAdd(uint256,uint256)": "infinite",
				"tryDiv(uint256,uint256)": "infinite",
				"tryMod(uint256,uint256)": "infinite",
				"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
				"tryModExp(uint256,uint256,uint256)": "infinite",
				"tryMul(uint256,uint256)": "infinite",
				"trySub(uint256,uint256)": "infinite",
				"unsignedRoundsUp(enum Math.Rounding)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}